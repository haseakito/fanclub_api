// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/hackgame-org/fanclub_api/ent/asset"
	"github.com/hackgame-org/fanclub_api/ent/billboard"
	"github.com/hackgame-org/fanclub_api/ent/category"
	"github.com/hackgame-org/fanclub_api/ent/like"
	"github.com/hackgame-org/fanclub_api/ent/post"
	"github.com/hackgame-org/fanclub_api/ent/schema"
	"github.com/hackgame-org/fanclub_api/ent/subscription"
	"github.com/hackgame-org/fanclub_api/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	assetFields := schema.Asset{}.Fields()
	_ = assetFields
	// assetDescCreatedAt is the schema descriptor for created_at field.
	assetDescCreatedAt := assetFields[4].Descriptor()
	// asset.DefaultCreatedAt holds the default value on creation for the created_at field.
	asset.DefaultCreatedAt = assetDescCreatedAt.Default.(func() time.Time)
	// assetDescUpdatedAt is the schema descriptor for updated_at field.
	assetDescUpdatedAt := assetFields[5].Descriptor()
	// asset.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	asset.DefaultUpdatedAt = assetDescUpdatedAt.Default.(func() time.Time)
	// asset.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	asset.UpdateDefaultUpdatedAt = assetDescUpdatedAt.UpdateDefault.(func() time.Time)
	// assetDescID is the schema descriptor for id field.
	assetDescID := assetFields[0].Descriptor()
	// asset.DefaultID holds the default value on creation for the id field.
	asset.DefaultID = assetDescID.Default.(func() uuid.UUID)
	billboardFields := schema.Billboard{}.Fields()
	_ = billboardFields
	// billboardDescCreatedAt is the schema descriptor for created_at field.
	billboardDescCreatedAt := billboardFields[3].Descriptor()
	// billboard.DefaultCreatedAt holds the default value on creation for the created_at field.
	billboard.DefaultCreatedAt = billboardDescCreatedAt.Default.(func() time.Time)
	// billboardDescUpdatedAt is the schema descriptor for updated_at field.
	billboardDescUpdatedAt := billboardFields[4].Descriptor()
	// billboard.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	billboard.DefaultUpdatedAt = billboardDescUpdatedAt.Default.(func() time.Time)
	// billboard.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	billboard.UpdateDefaultUpdatedAt = billboardDescUpdatedAt.UpdateDefault.(func() time.Time)
	// billboardDescID is the schema descriptor for id field.
	billboardDescID := billboardFields[0].Descriptor()
	// billboard.DefaultID holds the default value on creation for the id field.
	billboard.DefaultID = billboardDescID.Default.(func() uuid.UUID)
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescCreatedAt is the schema descriptor for created_at field.
	categoryDescCreatedAt := categoryFields[2].Descriptor()
	// category.DefaultCreatedAt holds the default value on creation for the created_at field.
	category.DefaultCreatedAt = categoryDescCreatedAt.Default.(func() time.Time)
	// categoryDescUpdatedAt is the schema descriptor for updated_at field.
	categoryDescUpdatedAt := categoryFields[3].Descriptor()
	// category.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	category.DefaultUpdatedAt = categoryDescUpdatedAt.Default.(func() time.Time)
	// category.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	category.UpdateDefaultUpdatedAt = categoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// categoryDescID is the schema descriptor for id field.
	categoryDescID := categoryFields[0].Descriptor()
	// category.DefaultID holds the default value on creation for the id field.
	category.DefaultID = categoryDescID.Default.(func() uuid.UUID)
	likeFields := schema.Like{}.Fields()
	_ = likeFields
	// likeDescPostID is the schema descriptor for post_id field.
	likeDescPostID := likeFields[1].Descriptor()
	// like.DefaultPostID holds the default value on creation for the post_id field.
	like.DefaultPostID = likeDescPostID.Default.(func() uuid.UUID)
	// likeDescUserID is the schema descriptor for user_id field.
	likeDescUserID := likeFields[2].Descriptor()
	// like.DefaultUserID holds the default value on creation for the user_id field.
	like.DefaultUserID = likeDescUserID.Default.(string)
	// likeDescCreatedAt is the schema descriptor for created_at field.
	likeDescCreatedAt := likeFields[3].Descriptor()
	// like.DefaultCreatedAt holds the default value on creation for the created_at field.
	like.DefaultCreatedAt = likeDescCreatedAt.Default.(func() time.Time)
	// likeDescID is the schema descriptor for id field.
	likeDescID := likeFields[0].Descriptor()
	// like.DefaultID holds the default value on creation for the id field.
	like.DefaultID = likeDescID.Default.(func() uuid.UUID)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescIsFeatured is the schema descriptor for is_featured field.
	postDescIsFeatured := postFields[4].Descriptor()
	// post.DefaultIsFeatured holds the default value on creation for the is_featured field.
	post.DefaultIsFeatured = postDescIsFeatured.Default.(bool)
	// postDescStatus is the schema descriptor for status field.
	postDescStatus := postFields[5].Descriptor()
	// post.DefaultStatus holds the default value on creation for the status field.
	post.DefaultStatus = postDescStatus.Default.(bool)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[6].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postFields[7].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(func() time.Time)
	// post.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	post.UpdateDefaultUpdatedAt = postDescUpdatedAt.UpdateDefault.(func() time.Time)
	// postDescID is the schema descriptor for id field.
	postDescID := postFields[0].Descriptor()
	// post.DefaultID holds the default value on creation for the id field.
	post.DefaultID = postDescID.Default.(func() uuid.UUID)
	subscriptionFields := schema.Subscription{}.Fields()
	_ = subscriptionFields
	// subscriptionDescIsArchived is the schema descriptor for is_archived field.
	subscriptionDescIsArchived := subscriptionFields[5].Descriptor()
	// subscription.DefaultIsArchived holds the default value on creation for the is_archived field.
	subscription.DefaultIsArchived = subscriptionDescIsArchived.Default.(bool)
	// subscriptionDescCreatedAt is the schema descriptor for created_at field.
	subscriptionDescCreatedAt := subscriptionFields[6].Descriptor()
	// subscription.DefaultCreatedAt holds the default value on creation for the created_at field.
	subscription.DefaultCreatedAt = subscriptionDescCreatedAt.Default.(func() time.Time)
	// subscriptionDescUpdatedAt is the schema descriptor for updated_at field.
	subscriptionDescUpdatedAt := subscriptionFields[7].Descriptor()
	// subscription.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subscription.DefaultUpdatedAt = subscriptionDescUpdatedAt.Default.(func() time.Time)
	// subscription.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subscription.UpdateDefaultUpdatedAt = subscriptionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subscriptionDescID is the schema descriptor for id field.
	subscriptionDescID := subscriptionFields[0].Descriptor()
	// subscription.DefaultID holds the default value on creation for the id field.
	subscription.DefaultID = subscriptionDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[2].Descriptor()
	// user.DefaultUsername holds the default value on creation for the username field.
	user.DefaultUsername = userDescUsername.Default.(string)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[7].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[8].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(string)
}
